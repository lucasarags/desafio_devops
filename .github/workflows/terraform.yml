name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        type: choice
        description: Select Terraform Action
        options:
          - apply
          - destroy
        required: true
  push:
    branches: [ "main" ]

jobs:
  terraform:
    name: 'Terraform'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEVOPS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEVOPS_SECRET_ACCESS_KEY }}
      replace_asg: false

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        run: |
          mkdir -p ~/.aws
          echo "[arags]" > ~/.aws/credentials 
          echo "aws_access_key_id=${{ secrets.AWS_DEVOPS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_DEVOPS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          echo "[profile arags]" > ~/.aws/config
          echo "region=us-east-1" >> ~/.aws/config
          echo "output=json" >> ~/.aws/config
          
      - name: Print AWS Config and Credentials
        run: |
          echo "AWS Credentials:"
          cat ~/.aws/credentials
          echo "AWS Config:"
          cat ~/.aws/config

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity --profile arags

      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: '0.14.3'
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: './infra'
          tf_actions_comment: true

      - name: Terraform Validate
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: '0.14.3'
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: './infra'
          tf_actions_comment: true

      - name: Terraform Plan
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: '0.14.3'
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: './infra'
          tf_actions_comment: true
          args: '-out=plan.tfplan'

      - name: Check for Launch Template Changes
        id: check_launch_template
        run: |
          if terraform show plan.tfplan | grep -q "Launch Template"; then
            echo "replace_asg=true" >> $GITHUB_ENV
            echo "Launch Template detected, replace_asg set to true"
          else
            echo "replace_asg=false" >> $GITHUB_ENV
            echo "No Launch Template changes detected, replace_asg set to false"
          fi

      - name: Set Terraform Apply Args
        id: set_args
        run: |
          echo "replace_asg=${{ env.replace_asg }}"  # Check the value of replace_asg
          if [ "${{ env.replace_asg }}" = "true" ]; then
            echo "TF_ARGS=-replace=aws_autoscaling_group.auto_scaling_group -auto-approve -input=false plan.tfplan" >> $GITHUB_ENV
          else
            echo "TF_ARGS=-auto-approve -input=false plan.tfplan" >> $GITHUB_ENV
          fi

      - name: Terraform Apply
        if: ${{ github.event.inputs.terraform_action == 'apply' }}
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: '0.14.3'
          tf_actions_subcommand: ${{ github.event.inputs.terraform_action }}
          tf_actions_working_dir: './infra'
          tf_actions_comment: true
          args: '${{ env.TF_ARGS }}'
           
      - name: Terraform Destroy
        if: ${{ github.event.inputs.terraform_action == 'destroy' }}
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: '0.14.3'
          tf_actions_subcommand: ${{ github.event.inputs.terraform_action }}
          tf_actions_working_dir: './infra'
          tf_actions_comment: true
          args: '-auto-approve'
