name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        type: choice
        description: select terraform action
        options:
        - apply
        - destroy
        required: true
  push:
    branches: [ "main" ]

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
        # Checkout the repository to the GitHub Actions runner
        - name: Checkout
          uses: actions/checkout@v4

        # Configura as credenciais da AWS
        - name: Set up AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_DEVOPS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_DEVOPS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_DEVOPS_REGION }}
            aws-profile: ${{ secrets.AWS_DEVOPS_PROFILE }}

        # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
        - name: Terraform Init
          uses: hashicorp/terraform-github-actions@master
          with:
            tf_actions_version: '0.14.3'
            tf_actions_subcommand: 'init'
            tf_actions_working_dir: './infra'
            tf_actions_comment: true

        # Validação do código Terraform
        - name: Terraform Validate
          uses: hashicorp/terraform-github-actions@master
          with:
            tf_actions_version: '0.14.3'
            tf_actions_subcommand: 'validate'
            tf_actions_working_dir: './infra'
            tf_actions_comment: true
  
        # Plano do Terraform
        - name: Terraform Plan
          uses: hashicorp/terraform-github-actions@master
          with:
            tf_actions_version: '0.14.3'
            tf_actions_subcommand: 'plan'
            tf_actions_working_dir: './infra'
            tf_actions_comment: true
            args: '-out=plan.tfplan'

        - name: Terraform apply
          if: ${{ github.event.inputs.terraform_action == 'apply' }}
          uses: hashicorp/terraform-github-actions@master
          with:
            tf_actions_version: '0.14.3'
            tf_actions_subcommand: ${{ github.event.inputs.terraform_action }}
            tf_actions_working_dir: './infra'
            tf_actions_comment: true
            args: '-auto-approve -input=false plan.tfplan'
           
        - name: Terraform destroy
          if: ${{ github.event.inputs.terraform_action == 'destroy' }}
          uses: hashicorp/terraform-github-actions@master
          with:
            tf_actions_version: '0.14.3'
            tf_actions_subcommand: ${{ github.event.inputs.terraform_action }}
            tf_actions_working_dir: './infra'
            tf_actions_comment: true
            args: '-auto-approve'
