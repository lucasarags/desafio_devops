name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        type: choice
        description: Select Terraform Action
        options:
          - apply
          - destroy
        required: true
  push:
    branches: [ "main" ]

jobs:
  terraform:
    name: 'Terraform'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEVOPS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEVOPS_SECRET_ACCESS_KEY }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        run: |
          mkdir -p ~/.aws
          echo "[arags]" > ~/.aws/credentials 
          echo "aws_access_key_id=${{ secrets.AWS_DEVOPS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_DEVOPS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          echo "[profile arags]" > ~/.aws/config
          echo "region=us-east-1" >> ~/.aws/config
          echo "output=json" >> ~/.aws/config
          
      - name: Print AWS Config and Credentials
        run: |
          echo "AWS Credentials:"
          cat ~/.aws/credentials
          echo "AWS Config:"
          cat ~/.aws/config

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity --profile arags

      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: '1.1.7'
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: './infra'
          tf_actions_comment: true

      - name: Terraform Validate
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: '1.1.7'
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: './infra'
          tf_actions_comment: true

      - name: Terraform Plan
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: '1.1.7'
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: './infra'
          tf_actions_comment: true
          args: '-out=plan.tfplan'

      - name: Terraform Apply
        if: ${{ github.event.inputs.terraform_action == 'apply' }}
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: '1.1.7'
          tf_actions_subcommand: ${{ github.event.inputs.terraform_action }}
          tf_actions_working_dir: './infra'
          tf_actions_comment: true
          args: '-auto-approve -input=false plan.tfplan'
           
      - name: Terraform Destroy
        if: ${{ github.event.inputs.terraform_action == 'destroy' }}
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: '1.1.7'
          tf_actions_subcommand: ${{ github.event.inputs.terraform_action }}
          tf_actions_working_dir: './infra'
          tf_actions_comment: true
          args: '-auto-approve'
